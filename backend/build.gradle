ext {
  versions = [
    dropWizard: '1.1.4',
    lombok: '1.16.18',
    junit: '4.12'
  ]
}

buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
  }
}

allprojects {
  repositories {
    mavenCentral()
  }
  apply plugin: 'java'
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
  group = 'io.aaronbatilo.sudokurace'
}

subprojects {
  apply plugin: 'checkstyle'
  apply plugin: 'findbugs'
  apply plugin: 'jacoco'

  checkstyle {
    configFile rootProject.file('config/checkstyle/google_checks.xml')
    toolVersion '8.10.1'
    showViolations = true
    ignoreFailures = false
    maxErrors = 0
    maxWarnings = 0
  }

  findbugs {
    ignoreFailures = false
    effort = 'max'
    reportLevel = 'high'
    showProgress = true
  }

  tasks.withType(FindBugs) {
    reports {
      xml.enabled false
      html.enabled true
    }
  }

  jacocoTestCoverageVerification {
    violationRules {
      rule {
        limit {
          minimum = 0.40
        }
      }
    }
  }

  test {
    dependsOn 'checkstyleMain', 'checkstyleTest', 'findbugsMain', 'findbugsTest'
    finalizedBy 'jacocoTestReport', 'jacocoTestCoverageVerification'
  }
}

project(':core') {
  apply plugin: 'application'
  mainClassName = 'CoreApplication'
}

project(':service') {
  apply plugin: 'application'
  apply plugin: 'com.github.johnrengelman.shadow'

  mainClassName = 'SudokuRaceApplication'

  shadowJar {
    archiveName = 'sr.jar'
    destinationDir projectDir
  }

  dependencies {
    compile project(":core")
    compile "io.dropwizard:dropwizard-core:$versions.dropWizard"
    compile "org.projectlombok:lombok:$versions.lombok"
    testCompile "junit:junit:$versions.junit"
  }
}
